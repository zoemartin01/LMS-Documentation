{
    "regex": [
        {
            "desc": "remove links from views",
            "search": "\\[(.*)\\]\\(.*\\)",
            "replace": "\\1",
            "filename": "^view\\.frontend\\..*\\.md$"
        },
        {
            "desc": "remove links from services",
            "search": "\\[(.*)\\]\\(.*\\)",
            "replace": "\\1",
            "filename": "^services\\.frontend\\.md$"
        },
        {
            "desc": "remove links from services",
            "search": "\\[(.*)\\]\\(.*\\)",
            "replace": "\\1",
            "filename": "^livecam\\.md$"
        },
        {
            "desc": "@see multilinks part 1",
            "search": "(\\*\\*See\\*\\*\\s[\\s\\w-]+- )(\\w+)",
            "replace": "\\1[\\2](#\\2)",
            "filename": "^.*\\.md$",
            "recursive": true,
            "disabled": false
        },
        {
            "desc": "@see multilinks part 2",
            "search": "(?:\\*\\*See\\*\\*\\s([\\s\\w\\[\\]#()-]+)(?:\\s- ([\\w.,\\[\\]()# ]+)))",
            "replace": "**See** \\1, \\2",
            "filename": "^.*\\.md$",
            "recursive": true,
            "disabled": false
        },
        {
            "desc": "@see multilinks part 3",
            "search": "(?:\\*\\*See\\*\\*\\s(?:\\s- ([\\w.,\\[\\]()# ]+)))",
            "replace": "**See**: \\1",
            "filename": "^.*\\.md$",
            "disabled": false
        },
        {
            "desc": "fix controller method links part 1",
            "search": "(\\\\label{[\\w.]+controller.[\\w.]+)(?:req-res})",
            "replace": "\\1}",
            "filename": "^controllers.*\\.tex$"
        },
        {
            "desc": "fix controller method links part 2",
            "search": "(\\\\hypertarget{[\\w.]+controller.[\\w.]+)(?:req-res})",
            "replace": "\\1}",
            "filename": "^controllers.*\\.tex$"
        },
        {
            "desc": "fix services method links part 1",
            "search": "\\(#(\\w+Service)\\+(\\w+)\\)",
            "replace": "(#\\1.\\2)",
            "filename": "^services.*\\.md$"
        },
        {
            "desc": "fix services method links part 2",
            "search": "(\\\\label{[\\w.]+service.[\\w.]+)(?:.*?})",
            "replace": "\\1}",
            "filename": "^services.*\\.tex$"
        },
        {
            "desc": "fix services method links part 3",
            "search": "(\\\\hypertarget{[\\w.]+service.[\\w.]+)(?:.*?})",
            "replace": "\\1}",
            "filename": "^services.*\\.tex$"
        },
        {
            "desc": "replace global class with controller class in controllers",
            "search": "(\\*\\*Kind\\*\\*: global class)",
            "replace": "**Kind**: controller class",
            "filename": "^controllers.*\\.md$",
            "disabled": true
        },
        {
            "desc": "Remove class overview from docs",
            "search": "\\\\hypertarget{classes}[\\s\\S]*?\\\\hypertarget",
            "replace": "\\\\hypertarget",
            "filename": "^.*\\.tex$"
        },
        {
            "desc": "Color ROUTES in kit-green",
            "search": "(GET|POST|DELETE|PATCH|PUT)",
            "replace": "\\\\textcolor{kit-green}{\\1}",
            "filename": "^.*\\.tex$"
        },
        {
            "desc": "Fix Model links",
            "search": "(##\\s\\S+)(?: : <code>)([\\w\\d]+)(?:<\\/code>)",
            "replace": "\\1\\n**Type**: \\2 \\\\",
            "filename": "^.*\\.md$"
        },
        {
            "desc": "Add @see links",
            "search": "(?:\\*\\*See\\*\\*: ([\\w.]+))",
            "replace": "**See**: [\\1](#\\1)",
            "filename": "^.*\\.md$"
        },
        {
            "desc": "Remove `static method of` from Controllers",
            "search": "\\\\textbf{Kind}: static method of[\\s\\S]+?Controller}}\\\\\\\\",
            "replace": "",
            "filename": "^controllers.*\\.tex$",
            "disabled": true,
            "broken": true
        },
        {
            "desc": "fix enum types not being linked",
            "search": "(<code>(ConfirmationStatus|OrderStatus|TimeslotType|NotificationChannel|TokenType|UserRole|VideoResolution)<\\/code>)",
            "replace": "[\\1](#\\2)",
            "filename": "^.*\\.md$"
        },
        {
            "desc": "multi body param part 1",
            "search": "(?<=\\*{2}Bodyparam\\*{2}.*\\n)\\*{2}Bodyparam\\*{2}: (.*) (.*?) - (.*)  ",
            "replace": "- \\2 \\1 - \\3",
            "filename": "^.*\\.md$"
        },
        {
            "desc": "multi body param part 2",
            "search": "(?<=\\*{2}Bodyparam\\*{2}: )(.*) (.*?) - (.*?)[ ]*\\n",
            "replace": "\\n\\n- \\2 \\1 - \\3\\n",
            "filename": "^.*\\.md$"
        },
        {
            "desc": "multi route param part 1",
            "search": "(?<=\\*{2}Routeparam\\*{2}.*\\n)\\*{2}Routeparam\\*{2}: (.*) (.*?) - (.*)  ",
            "replace": "- \\2 \\1 - \\3",
            "filename": "^.*\\.md$"
        },
        {
            "desc": "multi route param part 2",
            "search": "(?<=\\*{2}Routeparam\\*{2}: )(.*) (.*?) - (.*?)[ ]*\\n",
            "replace": "\\n\\n- \\2 \\1 - \\3\\n",
            "filename": "^.*\\.md$"
        },
        {
            "desc": "multi enumerators part 1",
            "search": "(?<=\\*{2}Enumerators\\*{2}.*\\n)\\*{2}Enumerators\\*{2}: (.*) (.*?)  ",
            "replace": "- \\1 \\2",
            "filename": "^.*\\.md$"
        },
        {
            "desc": "multi enumerators part 2",
            "search": "(?<=\\*{2}Enumerators\\*{2}: )(.*) (.*?)  \\n",
            "replace": "\\n\\n- \\1 \\2\\n",
            "filename": "^.*\\.md$"
        },
        {
            "desc": "Change route/body param order",
            "search": "(\\*\\*(?:Routeparam|Bodyparam)\\*\\*:) (<code>[\\w._-]+<\\/code>) ([\\w._-]+)",
            "replace": "\\1 \\3 \\2",
            "filename": "^.*\\.md$"
        },
        {
            "desc": "fix body param in route param list. i dont know why this is even needed aaaaah",
            "search": "(.+)\\\\textbf{Body\\s+Parameters}:",
            "replace": "\\1\\n\\\\end{itemize}\\n\\n\\\\textbf{Body Parameters}:\\n\\\\begin{itemize}",
            "filename": "^.*\\.tex$"
        },
        {
            "desc": "Change bodyparam to Body Parameters",
            "search": "\\*\\*Bodyparam\\*\\*:",
            "replace": "**Body Parameters**:",
            "filename": "^.*\\.md$"
        },
        {
            "desc": "Change paragraph font size",
            "search": "\\\\paragraph{([\\s\\S]+)}",
            "replace": "\\\\paragraph{{\\\\large{\\1}}}",
            "filename": "^.*\\.tex$",
            "disabled": true,
            "broken": true
        },
        {
            "desc": "Change bodyparam to Body Parameters",
            "search": "\\*\\*Routeparam\\*\\*:",
            "replace": "**Route Parameters**:",
            "filename": "^.*\\.md$"
        },
        {
            "desc": "multilist body param breaks params",
            "search": "(-.*-.*\\n)(\\*{2}Params\\*{2})",
            "replace": "\\1\\n\\2",
            "filename": "^.*\\.md$"
        },
        {
            "desc": "params with :",
            "search": "(\\*{2}Params\\*{2})",
            "replace": "\\1:",
            "filename": "^.*\\.md$"
        },
        {
            "desc": "Change params to Parameters",
            "search": "\\*\\*Params\\*\\*:",
            "replace": "**Parameters**:",
            "filename": "^.*\\.md$"
        },
        {
            "desc": "emph code",
            "search": "<code>(.*?)<\\/code>",
            "replace": "\\\\emph{\\1}",
            "filename": "^.*\\.md$"
        },
        {
            "desc": "<",
            "search": "&lt;",
            "replace": "{<}",
            "filename": "^.*\\.tex$"
        },
        {
            "desc": ">",
            "search": "&gt;",
            "replace": "{>}",
            "filename": "^.*\\.tex$"
        }
    ], 
    "lower": [
        {
            "search": "\\(#[\\w.]+\\)",
            "filename": "^.*\\.md$"
        }
    ],
    "disabled": [
        {
            "search": "subsubsection",
            "replace": "paragraph"
        },
        {
            "search": "subsection",
            "replace": "subsubsection"
        },
        {
            "desc": "Color second column in kit-red",
            "search": "(.*?& )(.*?)( &.*)",
            "replace": "\\1\\\\textcolor{kit-red}{\\2}\\3"
        }
    ]
}